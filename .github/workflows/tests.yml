name: Tests
on:
  push:

  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate set "debug_enabled"'
        type: boolean
        required: false
        default: false

defaults:
  run:
    shell: bash

permissions:
  contents: write

env:
  BUILDKIT_PROGRESS: plain

jobs:
  tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        dbversion: ["8.0.36"]
        arch: ["amd64"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

      - name: Run basic docker container
        run: |
          docker run --rm debian:bookworm bash -c 'arch && cat /etc/*release*'

      - name: Set up for multi-arch
        run: sudo docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Build mysql clients
        run: |
          ./build-clients.sh --mysql-version ${{ matrix.dbversion }} --arch ${{ matrix.arch }}

      - name: mysql ${{ matrix.dbversion }} ${{ matrix.arch }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mysql ${{ matrix.dbversion }} ${{ matrix.arch }}
          path: "./mysql_${{ matrix.dbversion }}/built_${{ matrix.dbversion }}_${{ matrix.arch }}/bin"

  release:
    runs-on: ubuntu-24.04
    needs: tests
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in $(find ./artifacts -type f); do
            gh release upload "${{ github.ref }}" "$file" --clobber
          done
